
# Load custom profiles first
if [ -e ~/.profile ] ; then 
    source ~/.profile
fi

if [ -e ~/.localrc ] ; then 
    source ~/.localrc
fi

# Load antigen & oh-my-zsh
source "$HOME/.antigen/antigen.zsh"
antigen-use oh-my-zsh

# Load oh-my-zsh plugins
antigen-bundle git
antigen-bundle git

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="norm"

# Check the current platform
platform='unknown'
unamestr=`uname`
if [[ $unamestr == 'Linux' ]]; then
    platform='linux'
elif [[ $unamestr == 'Darwin' ]]; then
    platform='macos'
fi

antigen-bundle git 
antigen-bundle git-flow 
antigen-bundle github 
antigen-bundle mercurial 
antigen-bundle node 
antigen-bundle npm 
antigen-bundle pip 
antigen-bundle python 
antigen-bundle virtualenvwrapper
antigen-bundle lein
antigen-bundle rsync
antigen-bundle cp
antigen-bundle bower
antigen-bundle colored-man
antigen-bundle vundle
antigen-bundle coffee

antigen-bundle zsh-users/zsh-completions

if [[ $platform == 'linux' ]]; then
    antigen-bundle debian
    antigen-bundle ssh-agent
elif [[ $platform == 'macos' ]]; then
    antigen-bundle macports
    antigen-bundle osx
    antigen-bundle brew
fi 

antigen-theme norm

antigen-apply

vundle-init

PROMPT='%{$fg[yellow]%}λ %{$fg[green]%}%m %{$fg[yellow]%}λ %{$fg[green]%}%c$(git_prompt_info)%{$fg[yellow]%} → %{$reset_color%}'

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg[yellow]%} λ %{$fg[blue]%}git %{$fg[red]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX=""

# Globbing tends to brake some rake functionality, so disable it
alias rake="noglob rake"
# Update some git aliases to personal versions
alias gst='git st'
alias gd='git diff'

# Publish current branch
alias gpub='git push -u origin $(current_branch)'

# Pull & Rebase
alias glr='git pull --rebase'

# Edit & add conflict files
alias gec='git status -sb | grep ^UU | cut -d" " -f 2 | xargs mvim'
alias gac='git status -sb | grep ^UU | cut -d" " -f 2 | xargs git add'

# Some git flow aliases
alias gf="git flow"
alias gff="git flow feature"
alias gffs="git flow feature start"
alias gfff="git flow feature finish"
alias gffc="git flow feature checkout"

# Ordered du alias
alias duc='du -s ./* | sort -n | cut -f 2- | sed "s/\(.*\)/\"\1\"/" | xargs -Ix du -sh x'
alias dua='du -a | sort -n | cut -f 2- | sed "s/\(.*\)/\"\1\"/" | xargs -Ix du -sh x'

# Count lines of code
if [[ `uname` == "Linux" ]] ; then
    alias loc='find -regextype posix-extended -regex ".*\.(cpp|c|h|hpp|py|coffee|clj)$" | xargs -n1 wc -l | cut -f1 -d"." | paste -sd+ - | bc'
else
    alias loc='find -E . -regex ".*\.(cpp|c|h|hpp|py|coffee|clj)$" | xargs -n1 wc -l | cut -f1 -d"." | paste -sd+ - | bc'
fi

# Nicer default df & free behaviour
alias df='df -h'
alias free='free -m'

# zmv ftw
autoload -U zmv
# alias for zmv for no quotes
# mmv *.c.orig orig/*.c
alias mmv='noglob zmv -W'

# Function for making a python package
function mkpypack {
    mkdir $1
    touch $1/__init__.py
}
alias mkp='mkpypack'

# Setup map alias to run a command on piped output
alias map='xargs -n1'

# cd to root of git repository
function cdr {
    cd $(git rev-parse --show-toplevel 2> /dev/null)
}

# TODO: Write similar cd function for hg
